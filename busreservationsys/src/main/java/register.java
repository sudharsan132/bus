
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author SaMsEn
 */
public class register extends javax.swing.JFrame {
private Connection connection;
    /**
     * Creates new form register
     */
    public register() {
        initComponents();
        connection=dbcon.getConnection();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        fn = new javax.swing.JTextField();
        bh = new javax.swing.JTextField();
        mb = new javax.swing.JTextField();
        cn = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        a = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        st = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        un = new javax.swing.JTextField();
        ps = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 255, 255));
        jLabel1.setText("CUSTOMER SIGNUP");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(220, 10, 301, 28);

        jLabel2.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("CUSTOMER NUMBER:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(50, 70, 162, 18);

        jLabel3.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("NAME:");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(50, 190, 162, 24);

        jLabel5.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("ADDRESS:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(50, 230, 162, 25);

        jLabel7.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("BRANCH:");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(50, 280, 177, 33);

        jButton1.setFont(new java.awt.Font("Lucida Console", 1, 14)); // NOI18N
        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(570, 110, 87, 49);

        jButton2.setFont(new java.awt.Font("Lucida Console", 1, 14)); // NOI18N
        jButton2.setText("CANCEL");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(570, 220, 81, 43);

        jLabel9.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("MOBILE:");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(50, 320, 177, 30);

        fn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fnActionPerformed(evt);
            }
        });
        jPanel1.add(fn);
        fn.setBounds(260, 190, 200, 30);
        jPanel1.add(bh);
        bh.setBounds(260, 280, 200, 30);
        jPanel1.add(mb);
        mb.setBounds(260, 320, 200, 30);

        cn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cnKeyReleased(evt);
            }
        });
        jPanel1.add(cn);
        cn.setBounds(260, 70, 200, 30);

        jLabel8.setText("jLabel8");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(0, 0, 0, 0);

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(570, 290, 72, 24);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Account Number:");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(50, 360, 160, 30);
        jPanel1.add(a);
        a.setBounds(260, 360, 200, 30);

        st.setColumns(20);
        st.setRows(5);
        jScrollPane1.setViewportView(st);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(260, 230, 210, 40);

        jLabel6.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Password:");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(50, 150, 150, 31);

        jLabel11.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Username:");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(50, 110, 150, 31);
        jPanel1.add(un);
        un.setBounds(260, 110, 200, 30);
        jPanel1.add(ps);
        ps.setBounds(260, 150, 200, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 703, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String custnum=cn.getText().toString();
        String uname=un.getText().toString();
        String pword=ps.getText().toString();
        String fname=fn.getText().toString();
        String street=st.getText().toString();
        String branch=bh.getText().toString();
        String mobile=mb.getText().toString();
        String account=a.getText().toString();
        if(custnum.equals(""))
        {
            JOptionPane.showMessageDialog(null,"CUSTOMER NUMBER IS MANDATORY.");
        }
        else if(!custnum.matches("[a-zA-Z0-9]+"))
        {
            JOptionPane.showMessageDialog(null,"CUSTOMER NUMBER ONLY CONTAINS ALPHANUMERIC CHARACTERS.");
        }
        if(uname.equals(""))
        {
            JOptionPane.showMessageDialog(null,"USERNAME IS MANDATORY.");
        }
        else if(!uname.matches("[a-zA-Z0-9]+"))
        {
            JOptionPane.showMessageDialog(null,"USERNAME ONLY CONTAINS ALPHANUMERIC CHARACTERS.");
        }
        if(pword.equals(""))
        {
            JOptionPane.showMessageDialog(null,"PASSWORD IS MANDATORY.");
        }
        else if(!pword.matches("[a-zA-Z0-9]+"))
        {
            JOptionPane.showMessageDialog(null,"PASSWORD ONLY CONTAINS ALPHANUMERIC CHARACTERS.");
        }
        if(fname.equals(""))
        {
            JOptionPane.showMessageDialog(null,"NAME IS MANDATORY.");
        }
        else if(!fname.matches("[a-zA-Z]+"))
        {
            JOptionPane.showMessageDialog(null,"NAME ONLY CONTAINS ALPHABETIC CHARACTERS.");
        }
        if(street.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Please fill address field.");
        }
        else if(!street.matches("[a-zA-Z0-9]+"))
        {
            JOptionPane.showMessageDialog(null,"ADDRESS ONLY CONTAINS ALPHANUMERIC CHARACTERS.");
        }
        if(branch.equals(""))
        {
            JOptionPane.showMessageDialog(null," BRANCH IS MANDATORY.");
        }
        else if(!branch.matches("[a-zA-Z]+"))
        {
            JOptionPane.showMessageDialog(null,"BRANCH ONLY CONTAINS ALPHABETIC CHARACTERS.");
        }
        if(mobile.equals(""))
        {
            JOptionPane.showMessageDialog(null,"CUSTOMER MOBILE NUMBER IS MANDATORY.");
        }
        else if(!(mobile.matches("[0-9]+")&&mobile.length()==10))
        {
            JOptionPane.showMessageDialog(null,"MOBILE NUMBERS ONLY CONTAINS NUMBERS & 10 NUMBERS ONLY.");
        }
        if(account.equals(""))
        {
            JOptionPane.showMessageDialog(null,"ACCOUNT NUMBER IS MANDATORY.");
        }
        else if(!account.matches("[a-zA-Z0-9]+")&&account.length()==11)
        {
            JOptionPane.showMessageDialog(null,"ACCOUNT NUMBER ONLY CONTAINS ALPHANUMERIC CHARACTERS.");
        }
        else
        {
            //JOptionPane.showMessageDialog(null,"ALL FIELDS ARE MANDATORY.");
            String salt=generateSalt();
            String hp=hashPassword(pword,salt);
        
 try
 {
     
 
     String query="INSERT INTO users (customerno,uname,name,address,branch,mobile,Accountno,password_salt,password_hash) VALUES (?,?,?,?,?,?,?,?,?)";
            PreparedStatement statement=connection.prepareStatement(query);
            statement.setString(1,custnum);
            statement.setString(2,uname);
            statement.setString(3,fname);
            statement.setString(4,street);
            statement.setString(5,branch);
            statement.setString(6,mobile);
            statement.setString(7,account);
            statement.setString(8,hp);
            statement.setString(9, salt);
            int k=statement.executeUpdate();
            if(k==1)
            {
                JOptionPane.showMessageDialog(null,"Sign Up Successful...");
                
                cn.setText("");
                un.setText("");
                ps.setText("");
                fn.setText("");
                st.setText("");
                bh.setText("");
                mb.setText("");
                a.setText("");
                new welcome().setVisible(true);
                setVisible(false);
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Failed to Sign Up...");
            }
 
 
 }
 catch(SQLException e)
 {
 System.out.println(e);
 } 
           
  }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        cn.setText(null);
        un.setText(null);
        ps.setText(null);
        fn.setText(null);
        st.setText(null);
        bh.setText(null);
        mb.setText(null);
        a.setText(null);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void fnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fnActionPerformed

    private void cnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cnKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_cnKeyReleased

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        new home().setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed
  private static String generateSalt(){
     SecureRandom r=new SecureRandom();
     byte[] saltBytes=new byte[16];
     r.nextBytes(saltBytes);
     return bytesToHex(saltBytes);     
  }
  private static String hashPassword(String password,String salt){
     try{
         MessageDigest digest=MessageDigest.getInstance("SHA-256");
         digest.reset();
         digest.update(hexToBytes(salt));
         byte[] hashedBytes=digest.digest(password.getBytes());
         return bytesToHex(hashedBytes);
     }
     catch(NoSuchAlgorithmException e){
         System.out.println("Error hashing password:"+e.getMessage());
     }
     return null;
 }
     
     private static String bytesToHex(byte[] bytes){
         StringBuilder hexString=new StringBuilder();
         for(byte b:bytes){
             String hex=Integer.toHexString(0xff & b);
             if(hex.length()==1) hexString.append('0');
                 hexString.append(hex);
             
             
         }
         return hexString.toString();
     }
     
     private static byte[] hexToBytes(String hexString){
         int length=hexString.length();
         byte[] bytes=new byte[length/2];
         for(int i=0;i<length;i+=2){
             bytes[i/2]=(byte)((Character.digit(hexString.charAt(i),16)<<4)+Character.digit(hexString.charAt(i+1),16 ));
         }
         return bytes;
     }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new register().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField a;
    private javax.swing.JTextField bh;
    private javax.swing.JTextField cn;
    private javax.swing.JTextField fn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField mb;
    private javax.swing.JTextField ps;
    private javax.swing.JTextArea st;
    private javax.swing.JTextField un;
    // End of variables declaration//GEN-END:variables
}
